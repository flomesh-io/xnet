run:
  tests: false
  timeout: 20m

linters:
  disable:
    - errcheck
  enable:
    - goconst
    - gocyclo
    - gofmt
    - goimports
    - gosec
    - govet
    - misspell
    - revive
    - unused
    - whitespace

linters-settings:
  goimports:
    local-prefixes: github.com/flomesh-io/xnet
  revive:
    rules:
      - name: unused-parameter
        disabled: true
  gosec:
    exclude-generated: true
    severity: medium
    confidence: medium

issues:
  exclude-dirs:
    - gen
  exclude-rules:
    # Ignore error for ginkgo and gomega dot imports
    - linters:
        - revive
      source: ". \"github.com/onsi/(ginkgo|gomega)\""
      text: "dot imports"
    # Exclude staticcheck messages for deprecated function, variable or constant
    # This causes issues with package github.com/golang/protobuf/proto
    - linters:
        - staticcheck
      text: "SA1019:"
    - linters:
        - gosec
      text: "G101:"
    - linters:
        - gosec
      text: "G115:"
    - linters:
        - gosimple
      text: "S1009:"
    - linters:
        - govet
      text: "printf: non-constant format string in call to"
  exclude-use-default: false
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true

# output configuration options
output:
  formats:
    text:
      # Print linter name in the end of issue text.
      # Default: true
      print-linter-name: true
      # Print lines of code with issue.
      # Default: true
      print-issued-lines: true
      # Use colors.
      # Default: true
      colors: true
  # Order to use when sorting results.
  # Possible values: `file`, `linter`, and `severity`.
  #
  # If the severity values are inside the following list, they are ordered in this order:
  #   1. error
  #   2. warning
  #   3. high
  #   4. medium
  #   5. low
  # Either they are sorted alphabetically.
  #
  # Default: ["linter", "file"]
  sort-order:
    - linter
    - severity
    - file # filepath, line, and column.
  # Show statistics per linter.
  # Default: true
  show-stats: true

severity:
  # Set the default severity for issues.
  #
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  # - TeamCity: https://www.jetbrains.com/help/teamcity/service-messages.html#Inspection+Instance
  #
  # Default value is an empty string.
  default-severity: "error"
  # If set to true `severity-rules` regular expressions become case-sensitive.
  # Default: false
  case-sensitive: true
  # When a list of severity rules are provided, severity information will be added to lint issues.
  # Severity rules have the same filtering capability as exclude rules
  # except you are allowed to specify one matcher per severity rule.
  # Only affects out formats that support setting severity information.
  #
  # Default: []
  rules:
    - linters:
        - dupl
      severity: info
