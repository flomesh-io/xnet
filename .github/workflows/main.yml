name: Go
on:
  push:
    branches:
      - main
      - release-v*
      - release/v*
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.h"
      - "**.c"
      - "**.ppt"
      - "CODEOWNERS"
      - "OWNERS"
  pull_request:
    branches:
      - main
      - release-v*
      - release/v*
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "CODEOWNERS"
      - "OWNERS"
env:
  CI_WAIT_FOR_OK_SECONDS: 60
  CI_MAX_ITERATIONS_THRESHOLD: 60
  CI_CLIENT_CONCURRENT_CONNECTIONS: 1
  CI_MAX_WAIT_FOR_POD_TIME_SECONDS: 60
  CI_MIN_SUCCESS_THRESHOLD: 1
  FSM_HUMAN_DEBUG_LOG: true

jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ShellCheck
        run: shellcheck -x $(find . -name '*.sh')

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --allow-parallel-runners=true --tests=false --timeout=5m

  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: go mod tidy
        run: make -f Makefile.cli.mk go-mod-tidy

  build:
    name: Go build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Go Build
        run: make -f Makefile.cli.mk build-cli

  imagescan:
    name: Scan images for security vulnerabilities
    runs-on: ubuntu-latest
    env:
      CTR_TAG: ${{ github.sha }}
      CTR_REGISTRY: "localhost:5000"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Build docker images
        env:
          DOCKER_BUILDX_OUTPUT: type=docker
        run: make docker-build
      - name: Setup Trivy
        run: make trivy-ci-setup
      - name: Scan docker images for vulnerabilities
        run: make trivy-scan-images

  images:
    name: Docker Images
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')) && github.event_name == 'push' }}
    env:
      CTR_REGISTRY: ${{ secrets.RELEASE_REGISTRY }}
      CTR_TAG: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.RELEASE_DOCKER_USER }}
          password: ${{ secrets.RELEASE_DOCKER_PASS }}
      - name: Push images with "latest" tag
        env:
          CTR_TAG: latest
        run: make docker-build-cross